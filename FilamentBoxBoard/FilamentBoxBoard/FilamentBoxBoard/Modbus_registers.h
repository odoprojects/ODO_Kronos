/*
 * Modbus_registers.h
 *
 * Created: 28.08.2016 14:49:01
 *  Author: Madman
 */ 


#ifndef MODBUS_REGISTERS_H_
#define MODBUS_REGISTERS_H_

#define MODBUS_RESET_ADR			1

#define MODBUS_DOOR_STATUS_ADR		100

#define MODBUS_SET_PID_AUTOTUNE_CONTROLLER_ID_ADR		500
#define MODBUS_SET_PID_AUTOTUNE_TEMPERATURE_ADR			501
#define MODBUS_SET_PID_AUTOTUNE_MAX_CYCLES_AND_SAVE_ADR	502

#define MODBUS_AUTOTUNE_PID_STATUS			600


#define MODBUS_EXT0_READ_TEMP_ADR	40000
#define MODBUS_EXT0_READ_TEMPC_ADR	40001
#define MODBUS_EXT0_SET_TEMP_ADR	20000
#define MODBUS_EXT0_R_W_SENSOR_TYPE_ADR 1000
#define MODBUS_EXT0_R_W_HEAT_MANAGER_ADR 1001
#define MODBUS_EXT0_R_W_PID_P_ADR	1002
#define MODBUS_EXT0_R_W_PID_I_ADR	1003
#define MODBUS_EXT0_R_W_PID_D_ADR	1004
#define MODBUS_EXT0_R_W_DRIVE_MAX_ADR	1005
#define MODBUS_EXT0_R_W_DRVE_MIN_ADR	1006
#define MODBUS_EXT0_R_W_PID_MAX_ADR	1007

#define MODBUS_EXT1_READ_TEMP_ADR	40002
#define MODBUS_EXT1_READ_TEMPC_ADR	40003
#define MODBUS_EXT1_SET_TEMP_ADR	20001
#define MODBUS_EXT1_R_W_SENSOR_TYPE_ADR 1010
#define MODBUS_EXT1_R_W_HEAT_MANAGER_ADR 1011
#define MODBUS_EXT1_R_W_PID_P_ADR	1012
#define MODBUS_EXT1_R_W_PID_I_ADR	1013
#define MODBUS_EXT1_R_W_PID_D_ADR	1014
#define MODBUS_EXT1_R_W_DRIVE_MAX_ADR	1015
#define MODBUS_EXT1_R_W_DRVE_MIN_ADR	1016
#define MODBUS_EXT1_R_W_PID_MAX_ADR	1017

#define MODBUS_BED_READ_TEMP_ADR	40004
#define MODBUS_BED_READ_TEMPC_ADR	40005
#define MODBUS_BED_SET_TEMP_ADR	20002
#define MODBUS_BED_R_W_SENSOR_TYPE_ADR 1020
#define MODBUS_BED_R_W_HEAT_MANAGER_ADR 1021
#define MODBUS_BED_R_W_PID_P_ADR	1022
#define MODBUS_BED_R_W_PID_I_ADR	1023
#define MODBUS_BED_R_W_PID_D_ADR	1024
#define MODBUS_BED_R_W_DRIVE_MAX_ADR	1025
#define MODBUS_BED_R_W_DRVE_MIN_ADR	1026
#define MODBUS_BED_R_W_PID_MAX_ADR	1027

#define MODBUS_CHAMBER0_READ_TEMP_ADR	40006
#define MODBUS_CHAMBER0_READ_TEMPC_ADR	40007
#define MODBUS_CHAMBER0_SET_TEMP_ADR	20003
#define MODBUS_CHAMBER0_R_W_SENSOR_TYPE_ADR 1030
#define MODBUS_CHAMBER0_R_W_HEAT_MANAGER_ADR 1031
#define MODBUS_CHAMBER0_R_W_PID_P_ADR	1032
#define MODBUS_CHAMBER0_R_W_PID_I_ADR	1033
#define MODBUS_CHAMBER0_R_W_PID_D_ADR	1034
#define MODBUS_CHAMBER0_R_W_DRIVE_MAX_ADR	1035
#define MODBUS_CHAMBER0_R_W_DRVE_MIN_ADR	1036
#define MODBUS_CHAMBER0_R_W_PID_MAX_ADR	1037

#define MODBUS_BED0_READ_TEMP_ADR	40008
#define MODBUS_BED0_READ_TEMPC_ADR	40009
#define MODBUS_BED0_SET_TEMP_ADR	20004
#define MODBUS_BED0_R_W_SENSOR_TYPE_ADR 1040
#define MODBUS_BED0_R_W_HEAT_MANAGER_ADR 1041
#define MODBUS_BED0_R_W_PID_P_ADR	1042
#define MODBUS_BED0_R_W_PID_I_ADR	1043
#define MODBUS_BED0_R_W_PID_D_ADR	1044
#define MODBUS_BED0_R_W_DRIVE_MAX_ADR	1045
#define MODBUS_BED0_R_W_DRVE_MIN_ADR	1046
#define MODBUS_BED0_R_W_PID_MAX_ADR	1047

#define MODBUS_BED1_READ_TEMP_ADR	40010
#define MODBUS_BED1_READ_TEMPC_ADR	40011
#define MODBUS_BED1_SET_TEMP_ADR	20005
#define MODBUS_BED1_R_W_SENSOR_TYPE_ADR 1050
#define MODBUS_BED1_R_W_HEAT_MANAGER_ADR 1051
#define MODBUS_BED1_R_W_PID_P_ADR	1052
#define MODBUS_BED1_R_W_PID_I_ADR	1053
#define MODBUS_BED1_R_W_PID_D_ADR	1054
#define MODBUS_BED1_R_W_DRIVE_MAX_ADR	1055
#define MODBUS_BED1_R_W_DRVE_MIN_ADR	1056
#define MODBUS_BED1_R_W_PID_MAX_ADR	1057

#define MODBUS_BED2_READ_TEMP_ADR	40012
#define MODBUS_BED2_READ_TEMPC_ADR	40013
#define MODBUS_BED2_SET_TEMP_ADR	20006
#define MODBUS_BED2_R_W_SENSOR_TYPE_ADR 1060
#define MODBUS_BED2_R_W_HEAT_MANAGER_ADR 1061
#define MODBUS_BED2_R_W_PID_P_ADR	1062
#define MODBUS_BED2_R_W_PID_I_ADR	1063
#define MODBUS_BED2_R_W_PID_D_ADR	1064
#define MODBUS_BED2_R_W_DRIVE_MAX_ADR	1065
#define MODBUS_BED2_R_W_DRVE_MIN_ADR	1066
#define MODBUS_BED2_R_W_PID_MAX_ADR	1067

#define MODBUS_BED3_READ_TEMP_ADR	40014
#define MODBUS_BED3_READ_TEMPC_ADR	40015
#define MODBUS_BED3_SET_TEMP_ADR	20007
#define MODBUS_BED3_R_W_SENSOR_TYPE_ADR 1070
#define MODBUS_BED3_R_W_HEAT_MANAGER_ADR 1071
#define MODBUS_BED3_R_W_PID_P_ADR	1072
#define MODBUS_BED3_R_W_PID_I_ADR	1073
#define MODBUS_BED3_R_W_PID_D_ADR	1074
#define MODBUS_BED3_R_W_DRIVE_MAX_ADR	1075
#define MODBUS_BED3_R_W_DRVE_MIN_ADR	1076
#define MODBUS_BED3_R_W_PID_MAX_ADR	1077

#define MODBUS_TENS_0_RAW_VALUE_WEIGHT_R_ADR		40100
#define MODBUS_TENS_0_WEIGHT_R_W_ADR				40101
#define MODBUS_TENS_0_FILAMENT_WEIGHT_R_ADR			40102
#define MODBUS_TENS_0_ROLL_WEIGHT_R_ADR				40103
#define MODBUS_TENS_0_SET_FILAMENT_WEIGHT_R_W_ADR	20100

#define MODBUS_TENS_1_RAW_VALUE_WEIGHT_R_ADR		40110
#define MODBUS_TENS_1_WEIGHT_R_W_ADR				40111
#define MODBUS_TENS_1_FILAMENT_WEIGHT_R_ADR			40112
#define MODBUS_TENS_1_ROLL_WEIGHT_R_ADR				40113
#define MODBUS_TENS_1_SET_FILAMENT_WEIGHT_R_W_ADR	20110

/*
//ilosc rejestrow zdefiniowana w tablicach ponizej
const uint16_t mod_reg_count = 94;
 
// druga wartosc okresla czy zawartosc rejestru jest R(1) czy W(2) czy RW(3)
const uint16_t modbus_registers[mod_reg_count] = {
		MODBUS_EXT0_READ_TEMP_ADR,
		MODBUS_EXT0_READ_TEMPC_ADR,
		MODBUS_EXT0_SET_TEMP_ADR,
		MODBUS_EXT0_R_W_SENSOR_TYPE_ADR,
		MODBUS_EXT0_R_W_HEAT_MANAGER_ADR,
		MODBUS_EXT0_R_W_PID_P_ADR,
		MODBUS_EXT0_R_W_PID_I_ADR,
		MODBUS_EXT0_R_W_PID_D_ADR,
		MODBUS_EXT0_R_W_DRIVE_MAX_ADR,
		MODBUS_EXT0_R_W_DRVE_MIN_ADR,
		MODBUS_EXT0_R_W_PID_MAX_ADR,
		MODBUS_EXT1_READ_TEMP_ADR,
		MODBUS_EXT1_READ_TEMPC_ADR,
		MODBUS_EXT1_SET_TEMP_ADR,
		MODBUS_EXT1_R_W_SENSOR_TYPE_ADR,
		MODBUS_EXT1_R_W_HEAT_MANAGER_ADR,
		MODBUS_EXT1_R_W_PID_P_ADR,
		MODBUS_EXT1_R_W_PID_I_ADR,
		MODBUS_EXT1_R_W_PID_D_ADR,
		MODBUS_EXT1_R_W_DRIVE_MAX_ADR,
		MODBUS_EXT1_R_W_DRVE_MIN_ADR,
		MODBUS_EXT1_R_W_PID_MAX_ADR,
		MODBUS_BED_READ_TEMP_ADR,
		MODBUS_BED_READ_TEMPC_ADR,
		MODBUS_BED_SET_TEMP_ADR,
		MODBUS_BED_R_W_SENSOR_TYPE_ADR,
		MODBUS_BED_R_W_HEAT_MANAGER_ADR,
		MODBUS_BED_R_W_PID_P_ADR,
		MODBUS_BED_R_W_PID_I_ADR,
		MODBUS_BED_R_W_PID_D_ADR,
		MODBUS_BED_R_W_DRIVE_MAX_ADR,
		MODBUS_BED_R_W_DRVE_MIN_ADR,
		MODBUS_BED_R_W_PID_MAX_ADR,
		MODBUS_CHAMBER0_READ_TEMP_ADR,
		MODBUS_CHAMBER0_READ_TEMPC_ADR,
		MODBUS_CHAMBER0_SET_TEMP_ADR,
		MODBUS_CHAMBER0_R_W_SENSOR_TYPE_ADR,
		MODBUS_CHAMBER0_R_W_HEAT_MANAGER_ADR,
		MODBUS_CHAMBER0_R_W_PID_P_ADR,
		MODBUS_CHAMBER0_R_W_PID_I_ADR,
		MODBUS_CHAMBER0_R_W_PID_D_ADR,
		MODBUS_CHAMBER0_R_W_DRIVE_MAX_ADR,
		MODBUS_CHAMBER0_R_W_DRVE_MIN_ADR,
		MODBUS_CHAMBER0_R_W_PID_MAX_ADR,
		MODBUS_BED0_READ_TEMP_ADR,
		MODBUS_BED0_READ_TEMPC_ADR,
		MODBUS_BED0_SET_TEMP_ADR,
		MODBUS_BED0_R_W_SENSOR_TYPE_ADR,
		MODBUS_BED0_R_W_HEAT_MANAGER_ADR,
		MODBUS_BED0_R_W_PID_P_ADR,
		MODBUS_BED0_R_W_PID_I_ADR,
		MODBUS_BED0_R_W_PID_D_ADR,
		MODBUS_BED0_R_W_DRIVE_MAX_ADR,
		MODBUS_BED0_R_W_DRVE_MIN_ADR,
		MODBUS_BED0_R_W_PID_MAX_ADR,
		MODBUS_BED1_READ_TEMP_ADR,
		MODBUS_BED1_READ_TEMPC_ADR,
		MODBUS_BED1_SET_TEMP_ADR,
		MODBUS_BED1_R_W_SENSOR_TYPE_ADR,
		MODBUS_BED1_R_W_HEAT_MANAGER_ADR,
		MODBUS_BED1_R_W_PID_P_ADR,
		MODBUS_BED1_R_W_PID_I_ADR,
		MODBUS_BED1_R_W_PID_D_ADR,
		MODBUS_BED1_R_W_DRIVE_MAX_ADR,
		MODBUS_BED1_R_W_DRVE_MIN_ADR,
		MODBUS_BED1_R_W_PID_MAX_ADR,
		MODBUS_BED2_READ_TEMP_ADR,
		MODBUS_BED2_READ_TEMPC_ADR,
		MODBUS_BED2_SET_TEMP_ADR,
		MODBUS_BED2_R_W_SENSOR_TYPE_ADR,
		MODBUS_BED2_R_W_HEAT_MANAGER_ADR,
		MODBUS_BED2_R_W_PID_P_ADR,
		MODBUS_BED2_R_W_PID_I_ADR,
		MODBUS_BED2_R_W_PID_D_ADR,
		MODBUS_BED2_R_W_DRIVE_MAX_ADR,
		MODBUS_BED2_R_W_DRVE_MIN_ADR,
		MODBUS_BED2_R_W_PID_MAX_ADR,
		MODBUS_BED3_READ_TEMP_ADR,
		MODBUS_BED3_READ_TEMPC_ADR,
		MODBUS_BED3_SET_TEMP_ADR,
		MODBUS_BED3_R_W_SENSOR_TYPE_ADR,
		MODBUS_BED3_R_W_HEAT_MANAGER_ADR,
		MODBUS_BED3_R_W_PID_P_ADR,
		MODBUS_BED3_R_W_PID_I_ADR,
		MODBUS_BED3_R_W_PID_D_ADR,
		MODBUS_BED3_R_W_DRIVE_MAX_ADR,
		MODBUS_BED3_R_W_DRVE_MIN_ADR,
		MODBUS_BED3_R_W_PID_MAX_ADR,
		MODBUS_RESET_ADR,
		MODBUS_DOOR_STATUS_ADR,
		MODBUS_SET_PID_AUTOTUNE_CONTROLLER_ID_ADR,
		MODBUS_SET_PID_AUTOTUNE_TEMPERATURE_ADR,
		MODBUS_SET_PID_AUTOTUNE_MAX_CYCLES_AND_SAVE_ADR,
		MODBUS_AUTOTUNE_PID_STATUS
};


const uint8_t modbus_registers_mode[mod_reg_count] = {
			1,
			1,
			3,
			3,
			3,
			3,
			3,
			3,
			3,
			3,
			3,
			1,
			1,
			3,
			3,
			3,
			3,
			3,
			3,
			3,
			3,
			3,
			1,
			1,
			3,
			3,
			3,
			3,
			3,
			3,
			3,
			3,
			3,
			1,
			1,
			3,
			3,
			3,
			3,
			3,
			3,
			3,
			3,
			3,
			1,
			1,
			3,
			3,
			3,
			3,
			3,
			3,
			3,
			3,
			3,
			1,
			1,
			3,
			3,
			3,
			3,
			3,
			3,
			3,
			3,
			3,
			1,
			1,
			3,
			3,
			3,
			3,
			3,
			3,
			3,
			3,
			3,
			1,
			1,
			3,
			3,
			3,
			3,
			3,
			3,
			3,
			3,
			3,
			2,
			3,
			2,
			2,
			2,
			1
};
*/
#endif /* MODBUS_REGISTERS_H_ */